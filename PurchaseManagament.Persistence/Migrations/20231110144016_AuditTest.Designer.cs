// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseManagament.Persistence.Concrete.Context;

#nullable disable

namespace PurchaseManagament.Persistence.Migrations
{
    [DbContext(typeof(PurchaseManagamentContext))]
    [Migration("20231110144016_AuditTest")]
    partial class AuditTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Audits.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("DateTimeOffset")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DATE_TIME")
                        .HasColumnOrder(7);

                    b.Property<int>("EntityState")
                        .HasColumnType("int")
                        .HasColumnName("ENTITY_STATE")
                        .HasColumnOrder(8);

                    b.Property<string>("MetaDisplayName")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("META_DISPLAY_NAME")
                        .HasColumnOrder(3);

                    b.Property<Guid>("MetaHashPrimaryKey")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("META_HASH_PRIMARY")
                        .HasColumnOrder(2);

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NEW_VALUES")
                        .HasColumnOrder(6);

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OLD_VALUES")
                        .HasColumnOrder(5);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("USER_ID")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("MetaHashPrimaryKey", "MetaDisplayName");

                    b.ToTable("AUDITS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Audits.AuditMetaData", b =>
                {
                    b.Property<Guid>("HashPrimaryKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DISPLAY_NAME")
                        .HasColumnOrder(4);

                    b.Property<string>("ReadablePrimaryKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("READABLE_PRIMARY_KEY")
                        .HasColumnOrder(2);

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TABLE")
                        .HasColumnOrder(3);

                    b.HasKey("HashPrimaryKey", "DisplayName");

                    b.ToTable("AUDIT_META_DATAS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ADDRESS")
                        .HasColumnOrder(3);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("COMPANIES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_ID")
                        .HasColumnOrder(2);

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnOrder(3);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("COMPANY_DEPARTMENTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_ID")
                        .HasColumnOrder(2);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(3);

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("QUANTITY")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("COMPANY_STOCK", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CURRENCY_NAME")
                        .HasColumnOrder(2);

                    b.Property<double>("Rate")
                        .HasColumnType("float")
                        .HasColumnName("CURRENCY_RATE")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("CURRENCIES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEPARTMENT_NAME")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("DEPARTMENTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("BIRTH_YEAR")
                        .HasColumnOrder(6);

                    b.Property<long>("CompanyDepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_DEPARTMENT_ID")
                        .HasColumnOrder(2);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("GENDER")
                        .HasColumnOrder(7);

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ID_NUMBER")
                        .HasColumnOrder(5);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(3);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SURNAME")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("CompanyDepartmentId");

                    b.ToTable("EMPLOYEES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS")
                        .HasColumnOrder(4);

                    b.Property<string>("ApprovedCode")
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("APPROVED_CODE")
                        .HasColumnOrder(9);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMAIL")
                        .HasColumnOrder(5);

                    b.Property<bool?>("EmailOk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EMAIL_OK")
                        .HasColumnOrder(8);

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("EMPLOYEE_ID")
                        .HasColumnOrder(2);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD")
                        .HasColumnOrder(6);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PHONE")
                        .HasColumnOrder(7);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EMPLOYEE_DETAILS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("EMPLOYEE_ID")
                        .HasColumnOrder(2);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("ROLE_ID")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EMPLOYEE_ROLES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.ImgProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID")
                        .HasColumnOrder(47);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(48);

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("IMAGE_SRC")
                        .HasColumnOrder(3);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("ProductId")
                        .HasColumnType("BigInt")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("IMG_PRODUCT", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID")
                        .HasColumnOrder(47);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(48);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("OfferId")
                        .HasColumnType("bigint")
                        .HasColumnName("OFFER_ID")
                        .HasColumnOrder(2);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS")
                        .HasColumnOrder(4);

                    b.Property<Guid>("UUID")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("OfferId")
                        .IsUnique();

                    b.ToTable("INVOICES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.MeasuringUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("MEASURING_UNIT", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Offer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApprovingEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("APPROVING_EMPLOYEE_ID")
                        .HasColumnOrder(5);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID")
                        .HasColumnOrder(47);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(48);

                    b.Property<long>("CurrencyId")
                        .HasColumnType("BigInt")
                        .HasColumnName("CURRENCY_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DETAILS")
                        .HasColumnOrder(7);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("OfferedPrice")
                        .HasColumnType("BigInt")
                        .HasColumnName("OFFERED_PRICE")
                        .HasColumnOrder(6);

                    b.Property<long>("RequestId")
                        .HasColumnType("BigInt")
                        .HasColumnName("REQUEST_ID")
                        .HasColumnOrder(4);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS")
                        .HasColumnOrder(8);

                    b.Property<long>("SupplierId")
                        .HasColumnType("BigInt")
                        .HasColumnName("SUPPLIER_ID")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ApprovingEmployeeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RequestId");

                    b.HasIndex("SupplierId");

                    b.ToTable("OFFERS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnOrder(4);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("MeasuringUnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("MEASURING_UNIT_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("MeasuringUnitId");

                    b.ToTable("PRODUCTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApprovingEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("APPROVING_EMPLOYEE_ID")
                        .HasColumnOrder(3);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID")
                        .HasColumnOrder(47);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(48);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DETAILS")
                        .HasColumnOrder(5);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(2);

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("QUANTITY")
                        .HasColumnOrder(6);

                    b.Property<long>("RequestEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("REQUEST_EMPLOYEE_ID")
                        .HasColumnOrder(4);

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("STATUS")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("ApprovingEmployeeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestEmployeeId");

                    b.ToTable("REQUESTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ROLE_NAME")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.StockOperations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_STOCK_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID")
                        .HasColumnOrder(47);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(48);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("QUANTITY")
                        .HasColumnOrder(4);

                    b.Property<long>("ReceivingEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("RECEIVING_EMPLOYEE")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("CompanyStockId");

                    b.HasIndex("ReceivingEmployeeId");

                    b.ToTable("STOCK_OPERATIONS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ADDRESS")
                        .HasColumnOrder(3);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnOrder(49)
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasColumnOrder(50)
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("SUPPLIERS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Audits.Audit", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "Employee")
                        .WithMany("Audits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("AUDITS_EMPLOYEE");

                    b.HasOne("PurchaseManagament.Domain.Entities.Audits.AuditMetaData", "AuditMetaData")
                        .WithMany("Audits")
                        .HasForeignKey("MetaHashPrimaryKey", "MetaDisplayName")
                        .HasConstraintName("AUDITS_AUDIT_META_DATA");

                    b.Navigation("AuditMetaData");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyDepartment", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Company", "Company")
                        .WithMany("CompanyDepartments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_DEPARTMENT_COMPANIES");

                    b.HasOne("PurchaseManagament.Domain.Entities.Department", "Department")
                        .WithMany("CompanyDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_DEPARTMENT_DEPARTMENTS");

                    b.Navigation("Company");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyStock", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Company", "Company")
                        .WithMany("CompanyStocks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_STOCK_COMPANIES");

                    b.HasOne("PurchaseManagament.Domain.Entities.Product", "Product")
                        .WithMany("CompanyStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_DEPARTMENT_PRODUCTS");

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Employee", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.CompanyDepartment", "CompanyDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyDepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyDepartment");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeDetail", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "Employee")
                        .WithOne("EmployeeDetail")
                        .HasForeignKey("PurchaseManagament.Domain.Entities.EmployeeDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("EMPLOYEE_DETAIL");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeRole", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.ImgProduct", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Product", "Product")
                        .WithOne("ImgProduct")
                        .HasForeignKey("PurchaseManagament.Domain.Entities.ImgProduct", "ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("PRODUCT_IMG");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Offer", "Offer")
                        .WithOne("Invoice")
                        .HasForeignKey("PurchaseManagament.Domain.Entities.Invoice", "OfferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("INVOICES_ORDER");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Offer", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "ApprovingEmployee")
                        .WithMany("Offers")
                        .HasForeignKey("ApprovingEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PurchaseManagament.Domain.Entities.Currency", "Currency")
                        .WithMany("Offers")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Request", "Request")
                        .WithMany("Offers")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Offers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApprovingEmployee");

                    b.Navigation("Currency");

                    b.Navigation("Request");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Product", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.MeasuringUnit", "MeasuringUnit")
                        .WithMany("Products")
                        .HasForeignKey("MeasuringUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PRODUCT_MEASURING_UNITS");

                    b.Navigation("MeasuringUnit");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Request", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "ApprovedEmployee")
                        .WithMany("ApprovedRequests")
                        .HasForeignKey("ApprovingEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("REQUEST_APPROVING_EMPLOYEE");

                    b.HasOne("PurchaseManagament.Domain.Entities.Product", "Product")
                        .WithMany("Requests")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("REQUEST_PRODUCTS");

                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "RequestEmployee")
                        .WithMany("EmployeeRequests")
                        .HasForeignKey("RequestEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("REQUEST_REQUEST_EMPLOYEE");

                    b.Navigation("ApprovedEmployee");

                    b.Navigation("Product");

                    b.Navigation("RequestEmployee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.StockOperations", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.CompanyStock", "CompanyStock")
                        .WithMany("StockOperations")
                        .HasForeignKey("CompanyStockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("STOCK_OPERATIONS_COMPANY_STOCK");

                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "Employee")
                        .WithMany("StockOperations")
                        .HasForeignKey("ReceivingEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("STOCK_OPERATIONS_RECEIVING_EMPLOYEE");

                    b.Navigation("CompanyStock");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Audits.AuditMetaData", b =>
                {
                    b.Navigation("Audits");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Company", b =>
                {
                    b.Navigation("CompanyDepartments");

                    b.Navigation("CompanyStocks");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyDepartment", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyStock", b =>
                {
                    b.Navigation("StockOperations");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Currency", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Department", b =>
                {
                    b.Navigation("CompanyDepartments");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Employee", b =>
                {
                    b.Navigation("ApprovedRequests");

                    b.Navigation("Audits");

                    b.Navigation("EmployeeDetail");

                    b.Navigation("EmployeeRequests");

                    b.Navigation("EmployeeRoles");

                    b.Navigation("Offers");

                    b.Navigation("StockOperations");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.MeasuringUnit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Offer", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Product", b =>
                {
                    b.Navigation("CompanyStocks");

                    b.Navigation("ImgProduct");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Request", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseManagament.Persistence.Concrete.Context;

#nullable disable

namespace PurchaseManagament.Persistence.Migrations
{
    [DbContext(typeof(PurchaseManagamentContext))]
    partial class PurchaseManagamentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("COMPANY_ADDRESS");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMPANY_NAME");

                    b.HasKey("Id");

                    b.ToTable("COMPANIES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("DEPARTMENT_ID")
                        .HasColumnOrder(3);

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("COMPANY_DEPARTMENTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(3);

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("QUANTİTY");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("COMPANY_STOCK", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CURRENCY_NAME");

                    b.Property<double>("Rate")
                        .HasColumnType("float")
                        .HasColumnName("CURRENCY_Rate");

                    b.HasKey("Id");

                    b.ToTable("CURRENCIES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEPARTMENT_NAME");

                    b.HasKey("Id");

                    b.ToTable("DEPATMENTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("BIRTH_YEAR");

                    b.Property<long>("CompanyDepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_DEPARTMENT_ID");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("GENDER");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMPLOYEE_ID_NUMBER");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EMPLOYEE_NAME");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EMPLOYEE_SURNAME");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDepartmentId");

                    b.ToTable("EMPLOYEES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("ApprovedCode")
                        .HasColumnType("nvarchar(15)")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMPLOYEE_EMAIL");

                    b.Property<bool?>("EmailOk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(3);

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("EMPLOYEE_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMPLOYEE_PASSWORD");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EMPLOYEE_PHONE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EMPLOYEE_DETAILS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("ROLE_ID");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EMPLOYEE_ROLES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<long>("OfferId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<Guid>("UUID")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("OfferId")
                        .IsUnique();

                    b.ToTable("INVOICES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.MeasuringUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("MEASURING_UNIT", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Offer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprovingEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("BigInt")
                        .HasColumnName("CURRENCY_ID");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<long>("OfferedPrice")
                        .HasColumnType("BigInt")
                        .HasColumnName("OFFERED_PRICE");

                    b.Property<long>("RequestId")
                        .HasColumnType("BigInt")
                        .HasColumnName("REQUEST_ID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<long>("SupplierId")
                        .HasColumnType("BigInt")
                        .HasColumnName("SUPLIER_ID");

                    b.HasKey("Id");

                    b.HasIndex("ApprovingEmployeeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RequestId");

                    b.HasIndex("SupplierId");

                    b.ToTable("OFFERS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnOrder(4);

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<long>("MeasuringUnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("MEASURING_UNIT_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("MeasuringUnitId");

                    b.ToTable("PRODUCTS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprovingEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("APPROVING_EMPLOYEE_ID")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DETAILS")
                        .HasColumnOrder(6);

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnOrder(2);

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("QUANTITY")
                        .HasColumnOrder(7);

                    b.Property<long>("RequestEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("REQUEST_EMPLOYEE_ID")
                        .HasColumnOrder(5);

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("STATUS")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("ApprovingEmployeeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestEmployeeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ROLE_NAME");

                    b.HasKey("Id");

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.StockOperations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANYSTOCK_ID");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("QUANTITY");

                    b.Property<long>("ReceiverEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("RECEIVER_EMPLOYEE_ID");

                    b.HasKey("Id");

                    b.HasIndex("CompanyStockId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiverEmployeeId");

                    b.ToTable("STOCK_OPERATIONS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("SUPLIER_ADDRESS");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED_BY_ID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CREATE_IP");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETED")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFIED_BY_ID");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("ModifiedIP")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MODIFIED_IP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SUPPLIERS", (string)null);
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyDepartment", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Company", "Company")
                        .WithMany("CompanyDepartments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_DEPARTMENT_COMPANIES");

                    b.HasOne("PurchaseManagament.Domain.Entities.Department", "Department")
                        .WithMany("CompanyDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_DEPARTMENT_DEPARTMENTS");

                    b.Navigation("Company");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyStock", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Company", "Company")
                        .WithMany("CompanyStocks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_STOCK_COMPANIES");

                    b.HasOne("PurchaseManagament.Domain.Entities.Product", "Product")
                        .WithMany("CompanyStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("COMPANY_DEPARTMENT_PRODUCTS");

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Employee", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.CompanyDepartment", "CompanyDepartment")
                        .WithMany("Employes")
                        .HasForeignKey("CompanyDepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyDepartment");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeDetail", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "Employee")
                        .WithOne("EmployeeDetail")
                        .HasForeignKey("PurchaseManagament.Domain.Entities.EmployeeDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("EMPLOYEE_DETAIL");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.EmployeeRole", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Offer", "Offer")
                        .WithOne("Invoice")
                        .HasForeignKey("PurchaseManagament.Domain.Entities.Invoice", "OfferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("INVOICES_ORDER");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Offer", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "ApprovingEmployee")
                        .WithMany("Offers")
                        .HasForeignKey("ApprovingEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Currency", "Currency")
                        .WithMany("Offers")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Request", "Request")
                        .WithMany("Offers")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Offers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApprovingEmployee");

                    b.Navigation("Currency");

                    b.Navigation("Request");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Product", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.MeasuringUnit", "MeasuringUnit")
                        .WithMany("Products")
                        .HasForeignKey("MeasuringUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PRODUCT_MEASURING_UNITS");

                    b.Navigation("MeasuringUnit");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Request", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "ApprovedEmployee")
                        .WithMany("ApprovedRequests")
                        .HasForeignKey("ApprovingEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("REQUEST_APPROVING_EMPLOYEE");

                    b.HasOne("PurchaseManagament.Domain.Entities.Product", "Product")
                        .WithMany("Requests")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("REQUEST_PRODUCTS");

                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "RequestEmployee")
                        .WithMany("EmployeeRequests")
                        .HasForeignKey("RequestEmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("REQUEST_REQUEST_EMPLOYEE");

                    b.Navigation("ApprovedEmployee");

                    b.Navigation("Product");

                    b.Navigation("RequestEmployee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.StockOperations", b =>
                {
                    b.HasOne("PurchaseManagament.Domain.Entities.CompanyStock", "CompanyStock")
                        .WithMany("StockOperations")
                        .HasForeignKey("CompanyStockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Product", "Product")
                        .WithMany("StockOperations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PurchaseManagament.Domain.Entities.Employee", "ReceiverEmployee")
                        .WithMany("StockOperations")
                        .HasForeignKey("ReceiverEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyStock");

                    b.Navigation("Product");

                    b.Navigation("ReceiverEmployee");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Company", b =>
                {
                    b.Navigation("CompanyDepartments");

                    b.Navigation("CompanyStocks");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyDepartment", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.CompanyStock", b =>
                {
                    b.Navigation("StockOperations");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Currency", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Department", b =>
                {
                    b.Navigation("CompanyDepartments");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Employee", b =>
                {
                    b.Navigation("ApprovedRequests");

                    b.Navigation("EmployeeDetail");

                    b.Navigation("EmployeeRequests");

                    b.Navigation("EmployeeRoles");

                    b.Navigation("Offers");

                    b.Navigation("StockOperations");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.MeasuringUnit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Offer", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Product", b =>
                {
                    b.Navigation("CompanyStocks");

                    b.Navigation("Requests");

                    b.Navigation("StockOperations");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Request", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("PurchaseManagament.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
